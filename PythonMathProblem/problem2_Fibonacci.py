# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:


def Fibonacci(num):
    fib_list = []
    if num < 1:
        print
        "Error: enter number should be bigger than 1"
        return

    if num == 1:
        fib_list.append(1)
        return fib_list
    elif num == 2:
        fib_list.append(1)
        fib_list.append(2)
        return fib_list
    fib_list = [1, 2]
    for i in range(0, num - 2):
        New_num = fib_list[i] + fib_list[i + 1]
        fib_list.append(New_num)
    # print fib_list
    return fib_list


# refactor code
def fib(max):
    n, a, b = 0, 0, 1
    while n < max:
        yield b
        a, b = b, a + b
        n = n + 1


# refactor again
def fib2():
    a, b = 0, 1
    while True:
        a, b = b, a + b
        yield b


if __name__ == "__main__":
    f = fib(1000)
    import itertools

    print
    list(itertools.islice(fib2(), 10))
